#include <dt-bindings/gpio/tegra-gpio.h>
#include <dt-bindings/pinctrl/pinctrl-tegra.h>
#include <dt-bindings/thermal/thermal.h>
#include <dt-bindings/input/input.h>
#include <dt-bindings/regulator/max8973.h>
#include <dt-bindings/soc/tegra-pmc.h>

#include "tegra210.dtsi"
#include "tegra210-audio.dtsi"
#include "tegra210-smaug-pinmux.dtsi"

/ {
	compatible = "google,smaug", "nvidia,tegra210";

  chosen {
	};

	memory {
		device_type = "memory";
		/* TODO: replace */
		reg = < 0x0 0x80000000 0x0 0x7660000 >,
		      < 0x1 0x00000000 0x0 0x40000000 >;
	};


	wifi: wifi_bcm4354 {
		compatible = "bcm,bcm4354";
		interrupt-parent = <&gpio>;
		interrupts = <TEGRA_GPIO(H, 2) IRQ_TYPE_LEVEL_HIGH>;
		wl_reg_on = <&gpio TEGRA_GPIO(H, 0) 0>;
		wl_host_wake = <&gpio TEGRA_GPIO(H, 2) IRQ_TYPE_LEVEL_HIGH>;
		nvidia,pmc-wakeup = <&pmc
			PMC_WAKE_TYPE_EVENT 8 PMC_TRIGGER_TYPE_HIGH>;
	};

	bt_bcm4354 {
		compatible = "bcm,bt-bcm4354";
		bt_reg_on-gpios = <&gpio TEGRA_GPIO(H, 4) GPIO_ACTIVE_LOW>;
		bt_host_wake-gpios = <&gpio TEGRA_GPIO(H, 5) GPIO_ACTIVE_HIGH>;
		bt_ext_wake-gpios = <&gpio TEGRA_GPIO(H, 3) GPIO_ACTIVE_LOW>;
		nvidia,pmc-wakeup = <&pmc
				PMC_WAKE_TYPE_EVENT 52 PMC_TRIGGER_TYPE_HIGH>;
	};

	gpio-keys {
		compatible = "gpio-keys";
		gpio-keys,name = "gpio-keys";

		power {
			label = "Power";
			gpios = <&gpio TEGRA_GPIO(X, 5) GPIO_ACTIVE_LOW>;
			linux,code = <KEY_POWER>;
			debounce-interval = <30>;
			gpio-key,wakeup;
			nvidia,pmc-wakeup = <&pmc
				PMC_WAKE_TYPE_GPIO 24 PMC_TRIGGER_TYPE_NONE>;
		};

		lid {
			label = "Lid";
			gpios = <&gpio TEGRA_GPIO(B, 4) GPIO_ACTIVE_LOW>;
			linux,input-type = <5>; /* EV_SW */
			linux,code = <0>; /* SW_LID */
			gpio-key,wakeup;
			nvidia,pmc-wakeup = <&pmc
				PMC_WAKE_TYPE_GPIO 3 PMC_TRIGGER_TYPE_NONE>;
		};

		tablet_mode {
			label = "Tablet Mode";
			gpios = <&gpio TEGRA_GPIO(Z, 2) GPIO_ACTIVE_HIGH>;
			linux,input-type = <5>; /* EV_SW */
			linux,code = <1>; /* SW_TABLET_MODE */
			gpio-key,wakeup;
			nvidia,pmc-wakeup = <&pmc
				PMC_WAKE_TYPE_GPIO 36 PMC_TRIGGER_TYPE_NONE>;
		};

		volume_down {
			label = "Volume Down";
			gpios = <&gpio TEGRA_GPIO(X, 7) GPIO_ACTIVE_LOW>;
			linux,code = <KEY_VOLUMEDOWN>;
		};

		volume_up {
			label = "Volume Up";
			gpios = <&gpio TEGRA_GPIO(M, 4) GPIO_ACTIVE_LOW>;
			linux,code = <KEY_VOLUMEUP>;
		};
	};

	regulators {
		compatible = "simple-bus";
		device_type = "fixed-regulators";
		#address-cells = <1>;
		#size-cells = <0>;

		ppvar_sys: regulator@0 {
			compatible = "regulator-fixed";
			reg = <0>;
			regulator-name = "PPVAR_SYS";
			regulator-min-microvolt = <4400000>;
			regulator-max-microvolt = <4400000>;
			regulator-always-on;
		};

		pplcd_vdd: regulator@1 {
			compatible = "regulator-fixed";
			reg = <1>;
			regulator-name = "PPLCD_VDD";
			regulator-min-microvolt = <4400000>;
			regulator-max-microvolt = <4400000>;
			gpio = <&gpio TEGRA_GPIO(V, 4) 0>;
			enable-active-high;
			regulator-boot-on;
		};

		pp3000_always: regulator@2 {
			compatible = "regulator-fixed";
			reg = <2>;
			regulator-name = "PP3000_ALWAYS";
			regulator-min-microvolt = <3000000>;
			regulator-max-microvolt = <3000000>;
			regulator-always-on;
		};

		pp5000: regulator@4 {
			compatible = "regulator-fixed";
			reg = <4>;
			regulator-name = "PP5000";
			regulator-min-microvolt = <5000000>;
			regulator-max-microvolt = <5000000>;
			regulator-always-on;
		};

		pp1800_lcdio: regulator@5 {
			compatible = "regulator-fixed";
			reg = <5>;
			regulator-name = "PP1800_LCDIO";
			regulator-min-microvolt = <1800000>;
			regulator-max-microvolt = <1800000>;
			gpio = <&gpio TEGRA_GPIO(V, 3) 0>;
			enable-active-high;
			regulator-boot-on;
		};

		pp1800_cam: regulator@6 {
			compatible = "regulator-fixed";
			reg= <6>;
			regulator-name = "PP1800_CAM";
			regulator-min-microvolt = <1800000>;
			regulator-max-microvolt = <1800000>;
			gpio = <&gpio TEGRA_GPIO(K, 3) 0>;
			enable-active-high;
		};
	};
};


&sdmmc2 {
	power-gpios = <&gpio TEGRA_GPIO(H, 0) GPIO_ACTIVE_HIGH>;
	bus-width = <4>;
	keep-power-in-suspend;
	non-removable;
	nvidia,pu-1v8-offset = <0x05>;
	nvidia,pd-1v8-offset = <0x05>;
	nvidia,trim-delay = <8>;
	nvidia,tap-delay = <0>;
	status = "okay";
};

&sdmmc4 {
	bus-width = <4>;
	non-removable;
	status = "okay";
};

&uarta {
	status = "okay";
};


&uartc {
	compatible = "nvidia,tegra210-hsuart", "nvidia,tegra30-hsuart";
	status = "okay";
};

&uartd {
	compatible = "nvidia,tegra124-hsuart", "nvidia,tegra30-hsuart";
	status = "okay";
};

&pmc {
	status = "okay";
	nvidia,invert-interrupt;
	nvidia,suspend-mode = <0>;
	nvidia,cpu-pwr-good-time = <0>;
	nvidia,cpu-pwr-off-time = <0>;
	nvidia,core-pwr-good-time = <12000 6000>;
	nvidia,core-pwr-off-time = <39053>;
	nvidia,core-power-req-active-high;
	nvidia,sys-clock-req-active-high;
	nvidia,pmc-clk1-out-en;
	nvidia,pmc-clk1-out-src = <PMC_CLK_OUT_SRC_OSC_DIV_2>;
	#nvidia,wake-cells = <3>;

	bootrom-i2c {
		command-block-0 {
			nvidia,i2c-controller-id = <4>;
			nvidia,pinmux-id = <0>;
			nvidia,bus-addr = <0x3c>;
			/* Set PPVAR_SOC to 1.0V */
			nvidia,reg-addr = <0x16>, <0x1b>;
			nvidia,reg-data = <0x20>, <0x20>;
		};
		command-block-1 {
			nvidia,i2c-controller-id = <4>;
			nvidia,pinmux-id = <0>;
			nvidia,bus-addr = <0x68>;
			/* Set RTCSECA2 to 0x1 to indicate a warm boot */
			nvidia,reg-addr = <0x15>, <0x04>;
			nvidia,reg-data = <0x01>, <0x0b>;
		};
	};
};

&spi1 {
	status = "okay";
	codec@0 {
		compatible = "realtek,rt5677-spi";
		reg = <0>;
		spi-max-frequency = <24000000>;
	};
};

&qspi6 {
	status = "okay";
	spi@0 {
		compatible = "spidev";
		reg = <1>;
		spi-max-frequency = <24000000>;

		controller-data {
			nvidia,x1-len-limit = <16>;
			nvidia,x1-bus-speed = <24000000>;
			nvidia,x1-dummy-cycle = <0>;
			nvidia,x4-bus-speed = <24000000>;
			nvidia,x4-dummy-cycle = <8>;
		};
	};
};
